#!/bin/bash

set -e
set -u

APPMGR_HOME=$(dirname "$0")
APPMGR_HOME=$(cd "$APPMGR_HOME/.." && pwd)
export APPMGR_HOME

. "$APPMGR_HOME/share/appmgr/common"
# HEADER END

usage_text() {
  echo "usage: $usage_app [-s group.name=value] -d dir <resolver> <resolver args>"
}

dir=
prepend_config=
append_config=

declare -a conf
conf=()
while getopts "d:C:c:s:" opt
do
  case $opt in
    d)
      dir=$OPTARG
      shift 2
      OPTIND=1
      ;;
    C)
      prepend_config=$OPTARG
      if [[ ! $prepend_config =~ ^/ ]]
      then
        prepend_config="$(pwd)/$prepend_config"
      fi
      shift 2
      OPTIND=1
      ;;
    c)
      append_config=$OPTARG
      if [[ ! $append_config =~ ^/ ]]
      then
        append_config="$(pwd)/$append_config"
      fi
      shift 2
      OPTIND=1
      ;;
    s)
      keyvalue=$OPTARG
      re="^$key_expr\\.$key_expr=.*$"
      if [[ ! $keyvalue =~ $re ]]
      then
        usage "Invalid -s argument."
      fi
      conf+=("$keyvalue")
      shift 2
      OPTIND=1
      ;;
  esac
done

if [ $# -lt 1 ]
then
  usage
fi

resolver_name="$1"; shift

if [ -z "$dir" ]
then
  usage "-d is required"
fi

if [ -e "$dir" ]
then
  fatal "Already initialized: $dir" 2>&1
fi

resolver=$(find_resolver "$resolver_name")

if [ -z "$resolver" ]
then
  echo "No such resolver: $resolver_name" 2>&1
  exit 1
fi

mkdir -p -- "$dir" "$dir/.app"

# shellcheck disable=SC2034
ok=no
# shellcheck disable=SC2034
clean_dir=$(cd "$dir" && pwd)
trap '[[ $ok == yes ]] || rm -rf "$clean_dir"' EXIT

cd "$dir"

if [[ ${#conf[@]} -gt 0 ]]
then
  for kv in "${conf[@]}"
  do
	key="${kv%%=*}"
	value="${kv#*=}"
	app-conf set "$key" "$value"
  done
fi

app-conf set app.resolver "$resolver_name"

"$resolver" init "$@"
"$resolver" resolve-version

resolved_version=$(app-conf get app.resolved_version)

if [[ $resolved_version == "" ]]
then
  echo "Unable to resolve version" 2>&1
  exit 1
fi

echo "Resolved version to $resolved_version"

"$resolver" download-version -v "$resolved_version" -f .app/latest.zip

args=()
args+=(-v)
args+=("$resolved_version")

if [[ $prepend_config != "" ]]
then
  args+=(-C)
  args+=(${prepend_config})
fi

if [[ $append_config != "" ]]
then
  args+=(-C)
  args+=(${append_config})
fi

args+=(-f)
args+=(.app/latest.zip)

app-install-file "${args[@]}"

# shellcheck disable=SC2034
ok=yes
